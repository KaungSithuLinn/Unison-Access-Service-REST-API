<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnisonRestAdapter</name>
    </assembly>
    <members>
        <member name="T:UnisonRestAdapter.Configuration.RequestTracingOptions">
            <summary>
            Configuration options for request tracing and logging
            </summary>
        </member>
        <member name="F:UnisonRestAdapter.Configuration.RequestTracingOptions.SectionName">
            <summary>
            Configuration section name
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.LogRequests">
            <summary>
            Whether to log incoming HTTP requests
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.LogResponses">
            <summary>
            Whether to log outgoing HTTP responses
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.LogHeaders">
            <summary>
            Whether to log HTTP headers (may contain sensitive data)
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.LogBody">
            <summary>
            Whether to log request/response body content
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.MaxBodySize">
            <summary>
            Maximum size of request/response body to log (bytes)
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.SensitiveHeaders">
            <summary>
            Headers that should be masked in logs for security
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.SensitiveBodyPaths">
            <summary>
            JSON paths that should be masked in request/response bodies
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.LogPerformanceMetrics">
            <summary>
            Whether to include performance metrics in logs
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.RequestTracingOptions.SlowRequestThresholdMs">
            <summary>
            Minimum duration (ms) to log slow requests
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Configuration.SecurityOptions">
            <summary>
            Security configuration options for the Unison REST Adapter
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.TokenConfigSection">
            <summary>
            Configuration section for token storage
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.EncryptionKey">
            <summary>
            Encryption key for token storage
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.EncryptTokensInStorage">
            <summary>
            Whether to encrypt tokens in storage
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.AllowFallbackToken">
            <summary>
            Allow fallback token for development
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.FallbackToken">
            <summary>
            Fallback token for development only
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.ValidTokens">
            <summary>
            Valid Unison authentication tokens
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.TokenExpiryHours">
            <summary>
            Token expiry hours (default: 24 hours)
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.EnableTokenRotation">
            <summary>
            Enable token rotation
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.MaxRequestsPerHour">
            <summary>
            Maximum requests per token per hour
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.EnableRateLimiting">
            <summary>
            Enable request rate limiting
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.AllowedIpAddresses">
            <summary>
            Allowed IP addresses (empty = allow all)
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.EnableIpWhitelist">
            <summary>
            Enable IP whitelist enforcement
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.LogSecurityEvents">
            <summary>
            Log security events
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.SecurityOptions.BlockSuspiciousRequests">
            <summary>
            Block suspicious requests
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Configuration.UnisonSettings">
            <summary>
            Configuration settings for Unison Access Service
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.ServiceUrl">
            <summary>
            SOAP service endpoint URL
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.WsdlUrl">
            <summary>
            WSDL endpoint URL
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.TimeoutSeconds">
            <summary>
            Request timeout in seconds
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.RetryAttempts">
            <summary>
            Number of retry attempts for failed requests
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.RetryDelayMs">
            <summary>
            Delay between retry attempts in milliseconds
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Configuration.UnisonSettings.EnableDetailedLogging">
            <summary>
            Enable detailed logging for SOAP requests/responses
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Configuration.ServiceConfiguration">
            <summary>
            Service configuration and dependency injection setup
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Configuration.ServiceConfiguration.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configures services for dependency injection
            </summary>
            <param name="services">Service collection</param>
            <param name="configuration">Application configuration</param>
        </member>
        <member name="T:UnisonRestAdapter.Configuration.UnisonHealthCheck">
            <summary>
            Health check for Unison Access Service
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Controllers.CardsController">
            <summary>
            REST API controller for card operations
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.CardsController.#ctor(UnisonRestAdapter.Services.IUnisonService,Microsoft.Extensions.Logging.ILogger{UnisonRestAdapter.Controllers.CardsController})">
            <summary>
            Initializes a new instance of the CardsController
            </summary>
            <param name="unisonService">Service for communicating with the SOAP backend</param>
            <param name="logger">Logger for tracking controller operations</param>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.CardsController.UpdateCard(UnisonRestAdapter.Models.Request.UpdateCardRequest)">
            <summary>
            Updates card information
            </summary>
            <param name="request">Card update request containing the card information to be updated</param>
            <returns>Update result indicating success or failure with details</returns>
            <response code="200">Card updated successfully</response>
            <response code="400">Invalid request data or update failed</response>
            <response code="401">Unauthorized - Unison-Token header missing or invalid</response>
            <remarks>
            Sample request:
            
                PUT /api/cards/update
                {
                    "cardId": "CARD123",
                    "userName": "john.doe",
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john.doe@company.com",
                    "department": "Engineering",
                    "title": "Software Developer",
                    "isActive": true,
                    "expirationDate": "2025-12-31T00:00:00Z"
                }
            
            Requires Unison-Token header with valid authentication token.
            </remarks>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.CardsController.UpdateCardPost(UnisonRestAdapter.Models.Request.UpdateCardRequest)">
            <summary>
            Updates card information - Alternative route for compatibility
            </summary>
            <param name="request">Card update request</param>
            <returns>Update result</returns>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.CardsController.GetCard(System.String)">
            <summary>
            Gets card information by card ID
            </summary>
            <param name="cardId">Card identifier to retrieve information for</param>
            <returns>Card information if found, otherwise not found response</returns>
            <response code="200">Card information retrieved successfully</response>
            <response code="404">Card not found</response>
            <response code="401">Unauthorized - Unison-Token header missing or invalid</response>
            <remarks>
            Sample request:
            
                GET /api/cards/CARD123
            
            Requires Unison-Token header with valid authentication token.
            </remarks>
        </member>
        <member name="T:UnisonRestAdapter.Controllers.HealthController">
            <summary>
            REST API controller for health check and monitoring operations
            Enhanced for TASK-005: Setup Continuous Endpoint Monitoring
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.HealthController.#ctor(UnisonRestAdapter.Services.IUnisonService,Microsoft.Extensions.Logging.ILogger{UnisonRestAdapter.Controllers.HealthController})">
            <summary>
            Initializes a new instance of the HealthController
            </summary>
            <param name="unisonService">Service for communicating with the SOAP backend</param>
            <param name="logger">Logger for tracking health check operations</param>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.HealthController.GetHealth">
            <summary>
            Simple health check that doesn't require authentication - for load balancers/monitoring
            </summary>
            <returns>Basic health status including service version and environment</returns>
            <response code="200">Service is healthy and operational</response>
            <remarks>
            This endpoint is designed for load balancers and monitoring tools.
            It does not require authentication and provides basic service status.
            
            Sample response:
            
                {
                    "status": "Healthy",
                    "timestamp": "2025-01-05T10:30:00Z",
                    "service": "UnisonRestAdapter",
                    "version": "1.0.0",
                    "environment": "Development"
                }
            </remarks>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.HealthController.GetDetailedHealth">
            <summary>
            Detailed health check with SOAP service connectivity validation
            </summary>
            <returns>Detailed health status including dependencies and system metrics</returns>
            <response code="200">Detailed health information including dependency status</response>
            <response code="503">Service unhealthy - one or more dependencies failed</response>
            <remarks>
            This endpoint provides comprehensive health information including:
            - Application status and uptime
            - Memory usage and system metrics
            - SOAP service connectivity (if Unison-Token provided)
            - Configuration validation
            
            Optional Unison-Token header enables SOAP service connectivity testing.
            </remarks>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.HealthController.GetReadiness">
            <summary>
            Readiness probe for Kubernetes/container orchestration
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.HealthController.GetLiveness">
            <summary>
            Liveness probe for Kubernetes/container orchestration
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Controllers.UsersController">
            <summary>
            REST API controller for user operations
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Gets user information by user ID
            </summary>
            <param name="userId">User identifier</param>
            <returns>User information</returns>
        </member>
        <member name="T:UnisonRestAdapter.Middleware.ErrorHandlingMiddleware">
            <summary>
            Enhanced error handling middleware that provides structured JSON error responses,
            SOAP fault to REST error mapping, proper HTTP status codes, and correlation tracking
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Middleware.ValidationException">
            <summary>
            Custom exception for validation errors
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ValidationException class
            </summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ValidationException class
            </summary>
            <param name="message">The error message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:UnisonRestAdapter.Middleware.RequestLoggingMiddleware">
            <summary>
            Middleware for logging HTTP requests and responses with structured logging
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{UnisonRestAdapter.Middleware.RequestLoggingMiddleware},Microsoft.Extensions.Options.IOptions{UnisonRestAdapter.Configuration.RequestTracingOptions})">
            <summary>
            Initializes a new instance of the RequestLoggingMiddleware
            </summary>
            <param name="next">The next middleware in the pipeline</param>
            <param name="logger">Logger instance</param>
            <param name="options">Request tracing options</param>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,UnisonRestAdapter.Services.Tracing.ICorrelationService)">
            <summary>
            Process the HTTP request and response logging
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.LogRequestAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Log incoming HTTP request details
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.LogResponseAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.IO.MemoryStream,System.Int64)">
            <summary>
            Log outgoing HTTP response details
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.LogPerformanceMetrics(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Int64,System.DateTimeOffset)">
            <summary>
            Log performance metrics for the request
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.LogRequestException(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Exception,System.Int64)">
            <summary>
            Log request processing exceptions
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.ReadRequestBodyAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Read and sanitize request body content
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.ReadResponseBodyAsync(System.IO.MemoryStream)">
            <summary>
            Read and sanitize response body content
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.SanitizeHeaders(Microsoft.AspNetCore.Http.IHeaderDictionary)">
            <summary>
            Sanitize headers by masking sensitive values
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.SanitizeBodyContent(System.String)">
            <summary>
            Sanitize body content by masking sensitive data
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.IsJsonContent(System.String)">
            <summary>
            Check if content appears to be JSON
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.SanitizeJsonBody(System.String)">
            <summary>
            Sanitize JSON body by masking sensitive paths
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.SanitizeTextBody(System.String)">
            <summary>
            Basic text sanitization for non-JSON content
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Middleware.RequestLoggingMiddleware.GetLogLevelForStatusCode(System.Int32)">
            <summary>
            Get appropriate log level based on HTTP status code
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Middleware.SecurityMiddleware">
            <summary>
            Enhanced security middleware for token validation, rate limiting, and IP filtering
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Middleware.TokenUsage">
            <summary>
            Token usage tracking
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Models.Request.UpdateCardRequest">
            <summary>
            Request model for updating card information
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.CardId">
            <summary>
            Unique identifier for the card (required, 1-50 characters, alphanumeric)
            </summary>
            <example>CARD123</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.UserName">
            <summary>
            User's login name
            </summary>
            <example>john.doe</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.FirstName">
            <summary>
            User's first name
            </summary>
            <example>John</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.LastName">
            <summary>
            User's last name
            </summary>
            <example>Doe</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.Email">
            <summary>
            User's email address
            </summary>
            <example>john.doe@company.com</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.Department">
            <summary>
            User's department
            </summary>
            <example>Engineering</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.Title">
            <summary>
            User's job title
            </summary>
            <example>Software Developer</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.IsActive">
            <summary>
            Whether the card is active
            </summary>
            <example>true</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.ExpirationDate">
            <summary>
            Card expiration date
            </summary>
            <example>2025-12-31T00:00:00Z</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Request.UpdateCardRequest.CustomFields">
            <summary>
            Additional custom fields for card update
            </summary>
            <example>{"building": "Building A", "floor": "3"}</example>
        </member>
        <member name="T:UnisonRestAdapter.Models.Responses.ErrorResponse">
            <summary>
            Structured error response model for consistent API error handling
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorResponse.Error">
            <summary>
            Error details
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorResponse.CorrelationId">
            <summary>
            Unique correlation ID for tracing this request across logs
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorResponse.Timestamp">
            <summary>
            Timestamp when the error occurred (UTC)
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorResponse.Path">
            <summary>
            Request path that caused the error
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorResponse.Method">
            <summary>
            HTTP method used in the request
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Models.Responses.ErrorDetail">
            <summary>
            Detailed error information
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorDetail.Code">
            <summary>
            Error code for programmatic handling
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorDetail.Type">
            <summary>
            Error type classification
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorDetail.Message">
            <summary>
            Human-readable error message
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Responses.ErrorDetail.Details">
            <summary>
            Additional error details (optional)
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Models.Response.UpdateCardResponse">
            <summary>
            Response model for card update operations
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UpdateCardResponse.Success">
            <summary>
            Indicates whether the update operation was successful
            </summary>
            <example>true</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UpdateCardResponse.Message">
            <summary>
            Human-readable message describing the result
            </summary>
            <example>Card updated successfully</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UpdateCardResponse.CardId">
            <summary>
            The card ID that was updated
            </summary>
            <example>CARD123</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UpdateCardResponse.Timestamp">
            <summary>
            Timestamp when the operation was completed
            </summary>
            <example>2025-01-05T10:30:00Z</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UpdateCardResponse.TransactionId">
            <summary>
            Unique identifier for this transaction
            </summary>
            <example>TXN-20250105-103000-CARD123</example>
        </member>
        <member name="T:UnisonRestAdapter.Models.Response.UserResponse">
            <summary>
            Response model for user information
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.UserId">
            <summary>
            Unique identifier for the user
            </summary>
            <example>USER123</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.UserName">
            <summary>
            User's login name
            </summary>
            <example>john.doe</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.FirstName">
            <summary>
            User's first name
            </summary>
            <example>John</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.LastName">
            <summary>
            User's last name
            </summary>
            <example>Doe</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Email">
            <summary>
            User's email address
            </summary>
            <example>john.doe@company.com</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Department">
            <summary>
            User's department
            </summary>
            <example>Engineering</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Title">
            <summary>
            User's job title
            </summary>
            <example>Software Developer</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.IsActive">
            <summary>
            Whether the user is active
            </summary>
            <example>true</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Success">
            <summary>
            Indicates whether the operation was successful
            </summary>
            <example>true</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Message">
            <summary>
            Human-readable message describing the result
            </summary>
            <example>User information retrieved successfully</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.UserResponse.Timestamp">
            <summary>
            Timestamp when the operation was completed
            </summary>
            <example>2025-01-05T10:30:00Z</example>
        </member>
        <member name="T:UnisonRestAdapter.Models.Response.HealthResponse">
            <summary>
            Response model for health check operations
            Enhanced for TASK-005: Setup Continuous Endpoint Monitoring
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.IsHealthy">
            <summary>
            Indicates whether the service is healthy
            </summary>
            <example>true</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.Message">
            <summary>
            Human-readable message describing the health status
            </summary>
            <example>Service is healthy and all dependencies are operational</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.Timestamp">
            <summary>
            Timestamp when the health check was performed
            </summary>
            <example>2025-01-05T10:30:00Z</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.ServiceVersion">
            <summary>
            Version of the service
            </summary>
            <example>1.0.0</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.AdditionalInfo">
            <summary>
            Additional health information including system metrics
            </summary>
            <example>{"uptime": "2 days", "memoryUsage": "45 MB"}</example>
        </member>
        <member name="P:UnisonRestAdapter.Models.Response.HealthResponse.ResponseTime">
            <summary>
            Response time for the health check operation in milliseconds
            </summary>
            <example>25</example>
        </member>
        <member name="T:UnisonRestAdapter.Services.ISoapClientService">
            <summary>
            Interface for SOAP client operations
            This will be implemented after SOAP client proxy generation
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.SoapUpdateCardResponse">
            <summary>
            SOAP response models (temporary until proxy is generated)
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.IUnisonService">
            <summary>
            Interface for Unison Access Service operations
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.IUnisonService.UpdateCardAsync(UnisonRestAdapter.Models.Request.UpdateCardRequest,System.String)">
            <summary>
            Updates card information via SOAP service
            </summary>
            <param name="request">Card update request</param>
            <param name="token">Authentication token</param>
            <returns>Update response</returns>
        </member>
        <member name="M:UnisonRestAdapter.Services.IUnisonService.GetUserAsync(System.String,System.String)">
            <summary>
            Retrieves user information via SOAP service
            </summary>
            <param name="userId">User identifier</param>
            <param name="token">Authentication token</param>
            <returns>User information</returns>
        </member>
        <member name="M:UnisonRestAdapter.Services.IUnisonService.CheckHealthAsync(System.String)">
            <summary>
            Health check for SOAP service connectivity
            </summary>
            <param name="token">Authentication token</param>
            <returns>Health status</returns>
        </member>
        <member name="T:UnisonRestAdapter.Services.SoapClientService">
            <summary>
            Implementation of SOAP client service using HttpClient
            Implements direct SOAP calls to Unison Access Service
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.Tracing.CorrelationService">
            <summary>
            Implementation of correlation service for request tracing
            </summary>
        </member>
        <member name="F:UnisonRestAdapter.Services.Tracing.CorrelationService.CorrelationIdHeaderName">
            <summary>
            Header name for correlation ID
            </summary>
        </member>
        <member name="F:UnisonRestAdapter.Services.Tracing.CorrelationService.RequestIdHeaderName">
            <summary>
            Header name for request ID
            </summary>
        </member>
        <member name="F:UnisonRestAdapter.Services.Tracing.CorrelationService.CorrelationIdKey">
            <summary>
            Context key for storing correlation ID
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.CorrelationService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Logging.ILogger{UnisonRestAdapter.Services.Tracing.CorrelationService})">
            <summary>
            Initializes a new instance of the CorrelationService
            </summary>
            <param name="httpContextAccessor">HTTP context accessor</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="P:UnisonRestAdapter.Services.Tracing.CorrelationService.CorrelationId">
            <inheritdoc />
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.CorrelationService.SetCorrelationId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.CorrelationService.GenerateCorrelationId">
            <inheritdoc />
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.CorrelationService.GetTracingHeaders">
            <inheritdoc />
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.CorrelationService.ExtractOrGenerateCorrelationId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Extracts correlation ID from request headers or generates new one
            </summary>
            <param name="context">HTTP context</param>
            <returns>Correlation ID</returns>
        </member>
        <member name="T:UnisonRestAdapter.Services.Tracing.ICorrelationService">
            <summary>
            Service for managing request correlation IDs and distributed tracing
            </summary>
        </member>
        <member name="P:UnisonRestAdapter.Services.Tracing.ICorrelationService.CorrelationId">
            <summary>
            Gets the current correlation ID for the request
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.ICorrelationService.SetCorrelationId(System.String)">
            <summary>
            Sets a new correlation ID for the current request
            </summary>
            <param name="correlationId">The correlation ID to set</param>
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.ICorrelationService.GenerateCorrelationId">
            <summary>
            Generates a new correlation ID
            </summary>
            <returns>New unique correlation ID</returns>
        </member>
        <member name="M:UnisonRestAdapter.Services.Tracing.ICorrelationService.GetTracingHeaders">
            <summary>
            Gets all tracing headers for the current request
            </summary>
            <returns>Dictionary of tracing headers</returns>
        </member>
        <member name="T:UnisonRestAdapter.Services.UnisonService">
            <summary>
            Implementation of Unison Access Service operations
            Wraps SOAP client calls and handles authentication
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.ValidationService">
            <summary>
            Service for validating JSON requests and converting them to SOAP templates
            Implements TASK-002: SOAP Request Validation Templates
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.ValidationService.ValidateUpdateCardRequest(UnisonRestAdapter.Models.Request.UpdateCardRequest)">
            <summary>
            Validates UpdateCard JSON request and returns validation result
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.ValidationService.GenerateUpdateCardSoapEnvelope(UnisonRestAdapter.Models.Request.UpdateCardRequest,System.String)">
            <summary>
            Converts validated UpdateCard request to SOAP envelope string
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.ValidationService.CreateValidationErrorResponse(UnisonRestAdapter.Services.ValidationResult)">
            <summary>
            Creates structured JSON error response for validation failures
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.ValidationService.IsValidCardId(System.String)">
            <summary>
            Validates CardId format (alphanumeric, 1-50 characters)
            </summary>
        </member>
        <member name="M:UnisonRestAdapter.Services.ValidationService.IsValidEmail(System.String)">
            <summary>
            Basic email format validation
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.IValidationService">
            <summary>
            Interface for validation service
            </summary>
        </member>
        <member name="T:UnisonRestAdapter.Services.ValidationResult">
            <summary>
            Validation result model
            </summary>
        </member>
        <member name="T:Program">
            <summary>
            Program class for the Unison REST Adapter service
            </summary>
        </member>
    </members>
</doc>
